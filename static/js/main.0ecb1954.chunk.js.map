{"version":3,"sources":["components/BingoNumber.js","components/Bingo.js","util/util.js","components/Game.js","App.js","index.js"],"names":["BingoNumber","props","handleClick","bind","e","this","isPlaying","checked","check","target","getAttribute","number","className","onClick","Component","Bingo","map","val","idx","key","originalArray","array","counter","length","index","Math","floor","random","temp","Game","numArr","checkedArr","i","push","state","num1","util","num2","checked1","checked2","isPlaying1","isPlaying2","resetNumber","resetChecked","num","index1","findIndex","parseInt","index2","setState","slice","id","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0ecb1954.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport './BingoNumber.css';\n\nclass BingoNumber extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    if (this.props.isPlaying === true && this.props.checked === false) {\n      this.props.check(e.target.getAttribute('number'));\n    }\n  }\n  render() {\n    const { number, checked, isPlaying } = this.props;\n    return (\n      <div\n        number={number}\n        checked={checked}\n        className={`number ${checked ? 'checked' : ''} ${\n          isPlaying ? '' : 'not-playing'\n        }`}\n        onClick={this.handleClick}\n      >\n        {number}\n      </div>\n    );\n  }\n}\n\nexport default BingoNumber;\n","import React, { Component } from 'react';\nimport BingoNumber from './BingoNumber';\n\nimport './Bingo.css';\n\nexport default class Bingo extends Component {\n  render() {\n    const { number, checked, check, isPlaying } = this.props;\n    return (\n      <div className=\"bingo\">\n        {number.map((val, idx) => {\n          return (\n            <BingoNumber\n              isPlaying={isPlaying}\n              key={val}\n              number={val}\n              checked={checked[idx]}\n              check={check}\n            ></BingoNumber>\n          );\n        })}\n      </div>\n    );\n  }\n}\n","const shuffle = originalArray => {\n  let array = [...originalArray];\n  let counter = array.length;\n\n  while (counter > 0) {\n    let index = Math.floor(Math.random() * counter);\n    counter--;\n\n    let temp = array[counter];\n    array[counter] = array[index];\n    array[index] = temp;\n  }\n  return array;\n};\n\nexport default { shuffle };\n","import React, { Component } from 'react';\nimport Bingo from './Bingo';\nimport util from '../util/util';\n\nexport default class Game extends Component {\n  constructor(props) {\n    super(props);\n\n    const numArr = [];\n    const checkedArr = [];\n\n    for (let i = 1; i <= 25; i++) {\n      numArr.push(i);\n      checkedArr.push(false);\n    }\n\n    this.state = {\n      num1: util.shuffle(numArr),\n      num2: util.shuffle(numArr),\n      checked1: [...checkedArr],\n      checked2: [...checkedArr],\n      isPlaying1: true,\n      isPlaying2: false\n    };\n\n    this.check = this.check.bind(this);\n    this.resetNumber = this.resetNumber.bind(this);\n    this.resetChecked = this.resetChecked.bind(this);\n  }\n\n  check(num) {\n    const index1 = this.state.num1.findIndex(\n      val => parseInt(num) === parseInt(val)\n    );\n    const index2 = this.state.num2.findIndex(\n      val => parseInt(num) === parseInt(val)\n    );\n\n    this.setState(() => {\n      return {\n        checked1: [\n          ...this.state.checked1.slice(0, index1),\n          true,\n          ...this.state.checked1.slice(index1 + 1)\n        ],\n        checked2: [\n          ...this.state.checked2.slice(0, index2),\n          true,\n          ...this.state.checked2.slice(index2 + 1)\n        ],\n        isPlaying1: !this.state.isPlaying1,\n        isPlaying2: !this.state.isPlaying2\n      };\n    });\n  }\n\n  resetNumber() {\n    const numArr = [];\n    const checkedArr = [];\n\n    for (let i = 1; i <= 25; i++) {\n      numArr.push(i);\n      checkedArr.push(false);\n    }\n    this.setState({\n      num1: util.shuffle(numArr),\n      num2: util.shuffle(numArr),\n      checked1: [...checkedArr],\n      checked2: [...checkedArr]\n    });\n  }\n\n  resetChecked() {\n    const checkedArr = [];\n\n    for (let i = 1; i <= 25; i++) {\n      checkedArr.push(false);\n    }\n    this.setState({\n      checked1: [...checkedArr],\n      checked2: [...checkedArr]\n    });\n  }\n\n  render() {\n    return (\n      <div id=\"main\">\n        <h1 id=\"title\">Bingo</h1>\n        <div className=\"reset\">\n          <button onClick={this.resetNumber}>Reset Number</button>\n          <button onClick={this.resetChecked}>Clear Selection</button>\n        </div>\n        <div className=\"turn-info\">\n          Player {this.state.isPlaying1 ? '1' : '2'} turn\n        </div>\n        <div className=\"container\">\n          <Bingo\n            isPlaying={this.state.isPlaying1}\n            number={this.state.num1}\n            checked={this.state.checked1}\n            check={this.check}\n          ></Bingo>\n          <Bingo\n            isPlaying={this.state.isPlaying2}\n            number={this.state.num2}\n            checked={this.state.checked2}\n            check={this.check}\n          ></Bingo>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nimport './App.css';\nimport Game from './components/Game';\n\nconst App = () => {\n  return (\n    <div id=\"main\">\n      <Game></Game>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}