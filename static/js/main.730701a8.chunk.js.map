{"version":3,"sources":["components/BingoNumber.js","components/Bingo.js","util/util.js","components/Info.js","components/Game.js","App.js","index.js"],"names":["BingoNumber","props","handleClick","bind","e","this","isPlaying","checked","check","target","getAttribute","number","className","onClick","Component","Bingo","map","val","idx","key","originalArray","array","counter","length","index","Math","floor","random","temp","Info","name","score","Game","numArr","checkedArr","i","push","state","num1","util","num2","checked1","checked2","isPlaying1","isPlaying2","score1","score2","resetNumber","resetChecked","checkWinner","num","index1","findIndex","parseInt","index2","setState","prev","slice","count1","count2","diagonalTLDR1","diagonalTLDR2","diagonalTRDL1","diagonalTRDL2","every","n","verticalColumn1","verticalColumn2","j","alert","id","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.730701a8.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport './BingoNumber.css';\n\nclass BingoNumber extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    if (this.props.isPlaying === true && this.props.checked === false) {\n      this.props.check(e.target.getAttribute('number'));\n    }\n  }\n  render() {\n    const { number, checked, isPlaying } = this.props;\n    return (\n      <div\n        number={number}\n        checked={checked}\n        className={`number ${checked ? 'checked' : ''} ${\n          isPlaying ? '' : 'not-playing'\n        }`}\n        onClick={this.handleClick}\n      >\n        {number}\n      </div>\n    );\n  }\n}\n\nexport default BingoNumber;\n","import React, { Component } from 'react';\nimport BingoNumber from './BingoNumber';\n\nimport './Bingo.css';\n\nexport default class Bingo extends Component {\n  render() {\n    const { number, checked, check, isPlaying } = this.props;\n    return (\n      <div className=\"bingo\">\n        {number.map((val, idx) => {\n          return (\n            <BingoNumber\n              isPlaying={isPlaying}\n              key={val}\n              number={val}\n              checked={checked[idx]}\n              check={check}\n            ></BingoNumber>\n          );\n        })}\n      </div>\n    );\n  }\n}\n","const shuffle = originalArray => {\n  let array = [...originalArray];\n  let counter = array.length;\n\n  while (counter > 0) {\n    let index = Math.floor(Math.random() * counter);\n    counter--;\n\n    let temp = array[counter];\n    array[counter] = array[index];\n    array[index] = temp;\n  }\n  return array;\n};\n\nexport default { shuffle };\n","import React, { Component } from 'react';\nimport './Info.css';\n\nexport default class Info extends Component {\n  render() {\n    return (\n      <div className=\"Info\">\n        <div>\n          <p className=\"Info-player-data\">{this.props.name}</p>\n          <p className=\"Info-player-data\">Score: {this.props.score}</p>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Bingo from './Bingo';\nimport util from '../util/util';\nimport Info from './Info';\n\nexport default class Game extends Component {\n  constructor(props) {\n    super(props);\n\n    const numArr = [];\n    const checkedArr = [];\n\n    for (let i = 1; i <= 25; i++) {\n      numArr.push(i);\n      checkedArr.push(false);\n    }\n\n    this.state = {\n      num1: util.shuffle(numArr),\n      num2: util.shuffle(numArr),\n      checked1: [...checkedArr],\n      checked2: [...checkedArr],\n      isPlaying1: true,\n      isPlaying2: false,\n      score1: 0,\n      score2: 0\n    };\n\n    this.check = this.check.bind(this);\n    this.resetNumber = this.resetNumber.bind(this);\n    this.resetChecked = this.resetChecked.bind(this);\n    this.checkWinner = this.checkWinner.bind(this);\n  }\n\n  check(num) {\n    const index1 = this.state.num1.findIndex(\n      val => parseInt(num) === parseInt(val)\n    );\n    const index2 = this.state.num2.findIndex(\n      val => parseInt(num) === parseInt(val)\n    );\n\n    this.setState(prev => {\n      return {\n        checked1: [\n          ...prev.checked1.slice(0, index1),\n          true,\n          ...prev.checked1.slice(index1 + 1)\n        ],\n        checked2: [\n          ...prev.checked2.slice(0, index2),\n          true,\n          ...prev.checked2.slice(index2 + 1)\n        ],\n        isPlaying1: !prev.isPlaying1,\n        isPlaying2: !prev.isPlaying2\n      };\n    }, this.checkWinner);\n  }\n\n  resetNumber() {\n    const numArr = [];\n    const checkedArr = [];\n\n    for (let i = 1; i <= 25; i++) {\n      numArr.push(i);\n      checkedArr.push(false);\n    }\n    this.setState({\n      num1: util.shuffle(numArr),\n      num2: util.shuffle(numArr),\n      checked1: [...checkedArr],\n      checked2: [...checkedArr],\n      isPlaying1: true,\n      isPlaying2: false,\n      score1: 0,\n      score2: 0\n    });\n  }\n\n  resetChecked() {\n    const checkedArr = [];\n\n    for (let i = 1; i <= 25; i++) {\n      checkedArr.push(false);\n    }\n    this.setState({\n      checked1: [...checkedArr],\n      checked2: [...checkedArr],\n      isPlaying1: true,\n      isPlaying2: false,\n      score1: 0,\n      score2: 0\n    });\n  }\n\n  checkWinner() {\n    const { checked1, checked2 } = this.state;\n    let count1 = 0;\n    let count2 = 0;\n\n    let diagonalTLDR1 = [];\n    let diagonalTLDR2 = [];\n    let diagonalTRDL1 = [];\n    let diagonalTRDL2 = [];\n\n    // Check horizontal\n    for (let i = 0; i < 25; i += 5) {\n      const horizontalRow1 = checked1.slice(i, i + 5);\n      if (horizontalRow1.every(n => n === true)) {\n        count1++;\n      }\n      const horizontalRow2 = checked2.slice(i, i + 5);\n      if (horizontalRow2.every(n => n === true)) {\n        count2++;\n      }\n    }\n\n    // Check vertikal\n    for (let i = 0; i < 5; i++) {\n      let verticalColumn1 = [];\n      let verticalColumn2 = [];\n      for (let j = i; j < 25; j += 5) {\n        verticalColumn1.push(checked1[j]);\n        verticalColumn2.push(checked2[j]);\n      }\n      if (verticalColumn1.every(n => n === true)) {\n        count1++;\n      }\n      if (verticalColumn2.every(n => n === true)) {\n        count2++;\n      }\n    }\n\n    // Check top-left down-right diagonal\n    for (let i = 0; i < 25; i += 6) {\n      diagonalTLDR1.push(checked1[i]);\n      diagonalTLDR2.push(checked2[i]);\n    }\n    if (diagonalTLDR1.every(n => n === true)) {\n      count1++;\n    }\n    if (diagonalTLDR2.every(n => n === true)) {\n      count2++;\n    }\n\n    // Check top-right down-left diagonal\n    for (let i = 4; i <= 20; i += 4) {\n      diagonalTRDL1.push(checked1[i]);\n      diagonalTRDL2.push(checked2[i]);\n    }\n    if (diagonalTRDL1.every(n => n === true)) {\n      count1++;\n    }\n    if (diagonalTRDL2.every(n => n === true)) {\n      count2++;\n    }\n    this.setState(\n      () => {\n        return {\n          score1: count1,\n          score2: count2\n        };\n      },\n      () => {\n        if (this.state.score1 >= 5 && this.state.score1 === this.state.score2) {\n          alert('Draw');\n          this.resetNumber();\n        } else if (this.state.score1 >= 5) {\n          alert('Player 1 win');\n          this.resetNumber();\n        } else if (this.state.score2 >= 5) {\n          alert('Player 2 win');\n          this.resetNumber();\n        }\n      }\n    );\n  }\n\n  render() {\n    return (\n      <>\n        <h1 id=\"title\">Bingo</h1>\n        <div className=\"reset\">\n          <button onClick={this.resetNumber}>Reset Number</button>\n          <button onClick={this.resetChecked}>Clear Selection</button>\n        </div>\n        <div className=\"turn-info\">\n          Player {this.state.isPlaying1 ? '1' : '2'} turn\n        </div>\n        <div className=\"container\">\n          <Info name=\"Player 1\" score={this.state.score1}></Info>\n          <Bingo\n            isPlaying={this.state.isPlaying1}\n            number={this.state.num1}\n            checked={this.state.checked1}\n            check={this.check}\n          ></Bingo>\n          <Bingo\n            isPlaying={this.state.isPlaying2}\n            number={this.state.num2}\n            checked={this.state.checked2}\n            check={this.check}\n          ></Bingo>\n          <Info name=\"Player 2\" score={this.state.score2}></Info>\n        </div>\n      </>\n    );\n  }\n}\n","import React from 'react';\n\nimport './App.css';\nimport Game from './components/Game';\n\nconst App = () => {\n  return (\n    <div id=\"main\">\n      <Game></Game>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}